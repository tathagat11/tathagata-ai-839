[
  {
    "objectID": "docs-quarto.html",
    "href": "docs-quarto.html",
    "title": "tathagata_ai_839 Documentation",
    "section": "",
    "text": "Welcome to the documentation for tathagata_ai_839."
  },
  {
    "objectID": "docs-quarto.html#api-reference",
    "href": "docs-quarto.html#api-reference",
    "title": "tathagata_ai_839 Documentation",
    "section": "API Reference",
    "text": "API Reference\nThe API reference for this project has been automatically generated. You can find the documentation for different modules here:\n\nData Processing Nodes\nData Science Nodes\nData Processing Pipeline\nData Science Pipeline\n\nFor a complete list of all documented items, see the Index."
  },
  {
    "objectID": "reference/pipelines.data_science.nodes.html",
    "href": "reference/pipelines.data_science.nodes.html",
    "title": "pipelines.data_science.nodes",
    "section": "",
    "text": "pipelines.data_science.nodes\n\n\n\n\n\nName\nDescription\n\n\n\n\ndetect_target_drift\nDetects target drift between training and test sets.\n\n\nevaluate_model\nCalculates and logs the accuracy of the model.\n\n\nsplit_data\nSplits data into training and test sets.\n\n\ntrain_model\nTrains the random forest model.\n\n\n\n\n\npipelines.data_science.nodes.detect_target_drift(y_train, y_test)\nDetects target drift between training and test sets.\nArgs: y_train: Target variable from the training set (DataFrame) y_test: Target variable from the test set (DataFrame)\nRaises: ValueError: If significant target drift is detected\n\n\n\npipelines.data_science.nodes.evaluate_model(model, X_test, y_test)\nCalculates and logs the accuracy of the model.\n\n\n\npipelines.data_science.nodes.split_data(features, target, parameters)\nSplits data into training and test sets.\n\n\n\npipelines.data_science.nodes.train_model(X_train, y_train, parameters)\nTrains the random forest model.",
    "crumbs": [
      "Data Science",
      "pipelines.data_science.nodes"
    ]
  },
  {
    "objectID": "reference/pipelines.data_science.nodes.html#functions",
    "href": "reference/pipelines.data_science.nodes.html#functions",
    "title": "pipelines.data_science.nodes",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\ndetect_target_drift\nDetects target drift between training and test sets.\n\n\nevaluate_model\nCalculates and logs the accuracy of the model.\n\n\nsplit_data\nSplits data into training and test sets.\n\n\ntrain_model\nTrains the random forest model.\n\n\n\n\n\npipelines.data_science.nodes.detect_target_drift(y_train, y_test)\nDetects target drift between training and test sets.\nArgs: y_train: Target variable from the training set (DataFrame) y_test: Target variable from the test set (DataFrame)\nRaises: ValueError: If significant target drift is detected\n\n\n\npipelines.data_science.nodes.evaluate_model(model, X_test, y_test)\nCalculates and logs the accuracy of the model.\n\n\n\npipelines.data_science.nodes.split_data(features, target, parameters)\nSplits data into training and test sets.\n\n\n\npipelines.data_science.nodes.train_model(X_train, y_train, parameters)\nTrains the random forest model.",
    "crumbs": [
      "Data Science",
      "pipelines.data_science.nodes"
    ]
  },
  {
    "objectID": "reference/pipelines.data_processing.nodes.html",
    "href": "reference/pipelines.data_processing.nodes.html",
    "title": "pipelines.data_processing.nodes",
    "section": "",
    "text": "pipelines.data_processing.nodes\n\n\n\n\n\nName\nDescription\n\n\n\n\nidentify_categorical_columns\nIdentify categorical columns in the DataFrame.\n\n\nidentify_numerical_columns\nIdentify numerical columns in the DataFrame.\n\n\nload_data\nLoad the data from the CSV file.\n\n\npreprocess_data\nPreprocess the data by handling categorical variables, scaling numerical variables,\n\n\nrun_data_quality_checks\nRun data quality checks on the input data.\n\n\nsplit_data\nSplit the data into features and target.\n\n\n\n\n\npipelines.data_processing.nodes.identify_categorical_columns(df)\nIdentify categorical columns in the DataFrame.\nArgs: df: Input DataFrame\nReturns: List of categorical column names\n\n\n\npipelines.data_processing.nodes.identify_numerical_columns(df)\nIdentify numerical columns in the DataFrame.\nArgs: df: Input DataFrame\nReturns: List of numerical column names\n\n\n\npipelines.data_processing.nodes.load_data(data)\nLoad the data from the CSV file.\nArgs: data: Raw DataFrame loaded by Kedro\nReturns: Loaded DataFrame\n\n\n\npipelines.data_processing.nodes.preprocess_data(df)\nPreprocess the data by handling categorical variables, scaling numerical variables, and separating the target variable.\nArgs: df: Raw DataFrame\nReturns: Preprocessed DataFrame\n\n\n\npipelines.data_processing.nodes.run_data_quality_checks(df)\nRun data quality checks on the input data.\nArgs: df: Input DataFrame\nReturns: Dictionary containing key metrics\n\n\n\npipelines.data_processing.nodes.split_data(df, target_column='y')\nSplit the data into features and target.\nArgs: df: Preprocessed DataFrame target_column: Name of the target column\nReturns: Dictionary containing ‘features’ and ‘target’ as DataFrames",
    "crumbs": [
      "Data Processing",
      "pipelines.data_processing.nodes"
    ]
  },
  {
    "objectID": "reference/pipelines.data_processing.nodes.html#functions",
    "href": "reference/pipelines.data_processing.nodes.html#functions",
    "title": "pipelines.data_processing.nodes",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nidentify_categorical_columns\nIdentify categorical columns in the DataFrame.\n\n\nidentify_numerical_columns\nIdentify numerical columns in the DataFrame.\n\n\nload_data\nLoad the data from the CSV file.\n\n\npreprocess_data\nPreprocess the data by handling categorical variables, scaling numerical variables,\n\n\nrun_data_quality_checks\nRun data quality checks on the input data.\n\n\nsplit_data\nSplit the data into features and target.\n\n\n\n\n\npipelines.data_processing.nodes.identify_categorical_columns(df)\nIdentify categorical columns in the DataFrame.\nArgs: df: Input DataFrame\nReturns: List of categorical column names\n\n\n\npipelines.data_processing.nodes.identify_numerical_columns(df)\nIdentify numerical columns in the DataFrame.\nArgs: df: Input DataFrame\nReturns: List of numerical column names\n\n\n\npipelines.data_processing.nodes.load_data(data)\nLoad the data from the CSV file.\nArgs: data: Raw DataFrame loaded by Kedro\nReturns: Loaded DataFrame\n\n\n\npipelines.data_processing.nodes.preprocess_data(df)\nPreprocess the data by handling categorical variables, scaling numerical variables, and separating the target variable.\nArgs: df: Raw DataFrame\nReturns: Preprocessed DataFrame\n\n\n\npipelines.data_processing.nodes.run_data_quality_checks(df)\nRun data quality checks on the input data.\nArgs: df: Input DataFrame\nReturns: Dictionary containing key metrics\n\n\n\npipelines.data_processing.nodes.split_data(df, target_column='y')\nSplit the data into features and target.\nArgs: df: Preprocessed DataFrame target_column: Name of the target column\nReturns: Dictionary containing ‘features’ and ‘target’ as DataFrames",
    "crumbs": [
      "Data Processing",
      "pipelines.data_processing.nodes"
    ]
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Function reference",
    "section": "",
    "text": "Data processing nodes\n\n\n\npipelines.data_processing.nodes\n\n\n\n\n\n\n\nData science nodes\n\n\n\npipelines.data_science.nodes\n\n\n\n\n\n\n\nPipeline definitions\n\n\n\npipelines.data_processing.pipeline\n\n\n\npipelines.data_science.pipeline",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#data-processing",
    "href": "reference/index.html#data-processing",
    "title": "Function reference",
    "section": "",
    "text": "Data processing nodes\n\n\n\npipelines.data_processing.nodes",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#data-science",
    "href": "reference/index.html#data-science",
    "title": "Function reference",
    "section": "",
    "text": "Data science nodes\n\n\n\npipelines.data_science.nodes",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#pipelines",
    "href": "reference/index.html#pipelines",
    "title": "Function reference",
    "section": "",
    "text": "Pipeline definitions\n\n\n\npipelines.data_processing.pipeline\n\n\n\npipelines.data_science.pipeline",
    "crumbs": [
      "Function reference"
    ]
  }
]